package client

import (
	"encoding/json"
	"fmt"
	"io"
	"net/http"
)

// Generated by https://quicktype.io
type Posts []PostData

type PostData struct {
	ID     int64  `json:"id"`
	Title  string `json:"title"`
	Author string `json:"author"`
}

type GetOptions struct {
	Env string
}

func Get(opts *GetOptions) error {
	url := "http://localhost:3000/posts"
	client := &http.Client{}

	req, err := http.NewRequest("GET", url, nil)
	if err != nil {
		panic(err)
	}
	resp, err := client.Do(req)
	if err != nil {
		panic(err)
	}
	defer func() {
		if err = resp.Body.Close(); err != nil {
			fmt.Printf("unexpected error occured when closing response body %v", err)
		}
	}()
	jsonResp := new(Posts)

	// 1
	respBody, err := io.ReadAll(resp.Body)
	if err != nil {
		panic(err)
	}
	if err = json.Unmarshal(respBody, jsonResp); err != nil {
		panic(err)
	}

	// 2
	// if err = json.NewDecoder(resp.Body).Decode(jsonResp); err != nil {
	// 	panic(err)
	// }

	if opts.Env == "test" {
		return nil
	}
	fmt.Printf("json response: %#v\n", jsonResp)

	return nil
}
